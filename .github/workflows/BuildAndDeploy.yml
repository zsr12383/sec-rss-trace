name: Build and Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: zsr12383/sc13-trace:latest

      - name: create env file
        run: |
          touch ./deploy/.env
          echo "${{ secrets.ENV_VAR }}" >> ./deploy/.env

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker-compose -f ~/work/sc13/deploy/docker-compose.yml down
            mkdir -p ~/work/sc13

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@7.0.1
        with:
          path: ./deploy
          switches: -avzr --delete
          remote_path: ~/work/sc13/
          remote_host: ${{ secrets.HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs:
          script: |
            sh ~/work/sc13/deploy/docker-install.sh
            echo "start docker-compose up: ubuntu"
            sudo docker-compose -v
            cat ~/work/sc13/deploy/.env
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login --username "${{secrets.DOCKERHUB_USERNAME}}" --password-stdin
            sudo docker-compose -f ~/work/sc13/deploy/docker-compose.yml pull
            sudo docker-compose -f ~/work/sc13/deploy/docker-compose.yml up -d
            echo "prune images"
            sudo docker system prune --all -f
